V_3 = readNIfTI(paste0(dti_path, "data_V3.nii.gz") )
dim(L_1)
dim(L_2)
dim(L_3)
sd( L_1[L_1>0] )
sd( L_2[L_1>0] )
sd( L_3[L_1>0] )
L_1[L_1>0]
L_1[L_1>0] - L_2[L_1>0]
max(L_1[L_1>0] - L_2[L_1>0])
min(L_1[L_1>0] - L_2[L_1>0])
V_1[L_1>0]
V_1[1]
V_1[2]
L_1>0
V_1[L_1>0]
tmp1 = V_1[L_1>0]
tmp2 = V_2[L_1>0]
tmp3 = V_3[L_1>0]
tmp1[1]
tmp2[1]
tmp3[1]
tmp1[1]^2 + tmp2[1]^2 + tmp3[1]^2
library(neurobase)
library(DICA)
dti_path = "/Users/Ben/Desktop/work2/DICA/600085654611/"
L_1 = readNIfTI(paste0(dti_path, "data_L1.nii.gz") )
L_2 = readNIfTI(paste0(dti_path, "data_L2.nii.gz") )
L_3 = readNIfTI(paste0(dti_path, "data_L3.nii.gz") )
V_1 = readNIfTI(paste0(dti_path, "data_V1.nii.gz") )
V_2 = readNIfTI(paste0(dti_path, "data_V2.nii.gz") )
V_3 = readNIfTI(paste0(dti_path, "data_V3.nii.gz") )
tmp1 = L_1[L_1>0]
class(tmp1)
n = length(tmp1)
n
sd(tmp1)
sd0 = sd(tmp1)
tmp1 = tmp1 + tmp1*0.5* rnorm(n)
min(L_1[L_1>0]-L_2[L_1>0])
tmp2 = L_2[L_1>0]
for(i in 1:n){
if(tmp1[i] < tmp2[i]){
tmp1[i] = tmp2[i] + 1e-6
}
}
min(L_2[L_1>0]-L_3[L_1>0])
tmp1 = L_1[L_1>0]
tmp2 = L_2[L_1>0]
tmp3 = L_3[L_1>0]
n = length(tmp1)
tmp1 = tmp1 + tmp1*0.05* rnorm(n)
tmp2 = tmp2 + tmp2*0.05* rnorm(n)
tmp3 = tmp3 + tmp3*0.05* rnorm(n)
for(i in 1:n){
if(tmp2[i] < tmp3[i]){
tmp2[i] = tmp3[i] + 1e-7
}
if(tmp1[i] < tmp2[i]){
tmp1[i] = tmp2[i] + 1e-7
}
}
L_1_0 = L_1
L_2_0 = L_2
L_3_0 = L_3
is.na(L_1)
sum(is.na(L_1))
sum((L_1==0))
sum((L_1!=0))
length(L_1)
L_1_0[L_1>0] = tmp1
L_2_0[L_1>0] = tmp2
L_3_0[L_1>0] = tmp3
dim(L_1_0)
writeNIfTI(L_1_0,filename = "/Users/ben/Desktop/Rpackage/L1")
writeNIfTI(L_2_0,filename = "/Users/ben/Desktop/Rpackage/L2")
writeNIfTI(L_3_0,filename = "/Users/ben/Desktop/Rpackage/L3")
writeNIfTI(V_1_0,filename = "/Users/ben/Desktop/Rpackage/V1")
writeNIfTI(V_2_0,filename = "/Users/ben/Desktop/Rpackage/V2")
writeNIfTI(V_3_0,filename = "/Users/ben/Desktop/Rpackage/V3")
V_1_0 = V_1
V_2_0 = V_2
V_3_0 = V_3
copyNIfTIHeader(img = L_1, arr = L_1_0)
copyNIfTIHeader(img = L_1, arr = L_2_0)
copyNIfTIHeader(img = L_1, arr = L_3_0)
copyNIfTIHeader(img = L_1, arr = V_1_0)
copyNIfTIHeader(img = L_1, arr = V_2_0)
copyNIfTIHeader(img = L_1, arr = V_3_0)
writeNIfTI(L_1_0,filename = "/Users/ben/Desktop/Rpackage/L1")
writeNIfTI(L_2_0,filename = "/Users/ben/Desktop/Rpackage/L2")
writeNIfTI(L_3_0,filename = "/Users/ben/Desktop/Rpackage/L3")
writeNIfTI(V_1_0,filename = "/Users/ben/Desktop/Rpackage/V1")
writeNIfTI(V_2_0,filename = "/Users/ben/Desktop/Rpackage/V2")
writeNIfTI(V_3_0,filename = "/Users/ben/Desktop/Rpackage/V3")
L_1 = readNIfTI("/Users/ben/Desktop/Rpackage/L1.nii.gz")
L_1 = readNIfTI("/Users/ben/Desktop/Rpackage/L1.nii.gz")
L_2 = readNIfTI("/Users/ben/Desktop/Rpackage/L2.nii.gz")
L_3 = readNIfTI("/Users/ben/Desktop/Rpackage/L3.nii.gz")
V_1 = readNIfTI("/Users/ben/Desktop/Rpackage/V1.nii.gz")
V_2 = readNIfTI("/Users/ben/Desktop/Rpackage/V2.nii.gz")
V_3 = readNIfTI("/Users/ben/Desktop/Rpackage/V3.nii.gz")
data0 = get_dti(V_1,V_2,V_3,L_1,L_2,L_3)
res_dti = dica(data0$X,K = 20,L =14,tol = 1e-3)
write_ics(res_dti$S,L_1,(L_1!=0), q = 0.95, paste0(write_path,"test_dti"))
write_path = "/Users/Ben/Desktop/work2/DICA/tmp/"
write_ics(res_dti$S,L_1,(L_1!=0), q = 0.95, paste0(write_path,"test_dti"))
#dti
dti_path = "/Users/Ben/Desktop/work2/DICA/600085654611/"
L_1 = readNIfTI(paste0(dti_path, "data_L1.nii.gz") )
L_2 = readNIfTI(paste0(dti_path, "data_L2.nii.gz") )
L_3 = readNIfTI(paste0(dti_path, "data_L3.nii.gz") )
V_1 = readNIfTI(paste0(dti_path, "data_V1.nii.gz") )
V_2 = readNIfTI(paste0(dti_path, "data_V2.nii.gz") )
V_3 = readNIfTI(paste0(dti_path, "data_V3.nii.gz") )
tmp1 = L_1[L_1>0]
tmp2 = L_2[L_1>0]
tmp3 = L_3[L_1>0]
n = length(tmp1)
tmp1 = tmp1 + tmp1*0.03* rnorm(n)
tmp2 = tmp2 + tmp2*0.02* rnorm(n)
tmp3 = tmp3 + tmp3*0.02* rnorm(n)
for(i in 1:n){
if(tmp2[i] < tmp3[i]){
tmp2[i] = tmp3[i] + 1e-7
}
if(tmp1[i] < tmp2[i]){
tmp1[i] = tmp2[i] + 1e-7
}
}
L_1_0 = L_1
L_2_0 = L_2
L_3_0 = L_3
L_1_0[L_1>0] = tmp1
L_2_0[L_1>0] = tmp2
L_3_0[L_1>0] = tmp3
V_1_0 = V_1
V_2_0 = V_2
V_3_0 = V_3
copyNIfTIHeader(img = L_1, arr = L_1_0)
copyNIfTIHeader(img = L_1, arr = L_2_0)
copyNIfTIHeader(img = L_1, arr = L_3_0)
copyNIfTIHeader(img = L_1, arr = V_1_0)
copyNIfTIHeader(img = L_1, arr = V_2_0)
copyNIfTIHeader(img = L_1, arr = V_3_0)
writeNIfTI(L_1_0,filename = "/Users/ben/Desktop/Rpackage/L1")
writeNIfTI(L_2_0,filename = "/Users/ben/Desktop/Rpackage/L2")
writeNIfTI(L_3_0,filename = "/Users/ben/Desktop/Rpackage/L3")
writeNIfTI(V_1_0,filename = "/Users/ben/Desktop/Rpackage/V1")
writeNIfTI(V_2_0,filename = "/Users/ben/Desktop/Rpackage/V2")
writeNIfTI(V_3_0,filename = "/Users/ben/Desktop/Rpackage/V3")
L_1 = readNIfTI("/Users/ben/Desktop/Rpackage/L1.nii.gz")
L_2 = readNIfTI("/Users/ben/Desktop/Rpackage/L2.nii.gz")
L_3 = readNIfTI("/Users/ben/Desktop/Rpackage/L3.nii.gz")
V_1 = readNIfTI("/Users/ben/Desktop/Rpackage/V1.nii.gz")
V_2 = readNIfTI("/Users/ben/Desktop/Rpackage/V2.nii.gz")
V_3 = readNIfTI("/Users/ben/Desktop/Rpackage/V3.nii.gz")
data0 = get_dti(V_1,V_2,V_3,L_1,L_2,L_3)
res_dti = dica(data0$X,K = 20,L =14,tol = 1e-3)
write_ics(res_dti$S,L_1,(L_1!=0), q = 0.95, paste0(write_path,"test_dti"))
system.file("L_1.nii.gz",package="DICA")
library(DICA)
system.file("L_1.nii.gz",package="DICA")
system.file("","L_1.nii.gz",package="DICA")
system.file("inst","L_1.nii.gz",package="DICA")
system.file("extdata","L_1.nii.gz",package="DICA")
library(DICA)
system.file("extdata","L_1.nii.gz",package="DICA")
system.file("extdata","L1.nii.gz",package="DICA")
system.file("extdata",package="DICA")
system.file("extdata","*nii.gz",package="DICA")
system.file("extdata","*.nii.gz",package="DICA")
fmridata = readNIfTI(system.file("extdata","ex_fmri.nii.gz",package="DICA") )
library(DICA)
fmridata = readNIfTI(system.file("extdata","ex_fmri.nii.gz",package="DICA") )
fmridata = neurobase::readNIfTI(system.file("extdata","ex_fmri.nii.gz",package="DICA") )
fmridata = oro.nifti::readNIfTI(system.file("extdata","ex_fmri.nii.gz",package="DICA") )
library(DICA)
data_path = system.file("extdata",package="DICA")
data_path
``` r
fmridata = oro.nifti::readNIfTI(paste0(data_path,"fmri.nii.gz")
mask = 1 - is.na(fmridata[,,,1])
``` r
fmridata = oro.nifti::readNIfTI(paste0(data_path,"fmri.nii.gz"))
mask = 1 - is.na(fmridata[,,,1])
paste0(data_path,"fmri.nii.gz")
``` r
fmridata = oro.nifti::readNIfTI(paste0(data_path,"/fmri.nii.gz"))
mask = 1 - is.na(fmridata[,,,1])
fmridata = oro.nifti::readNIfTI(paste0(data_path,"/fmri.nii.gz"))
fmridata = oro.nifti::readNIfTI(paste0(data_path,"/fmri.nii.gz"))
mask = 1 - is.na(fmridata[,,,1])
prep_data = prepfmri(fmridata,mask,40)
res_fmri = dica(prep_data,K = 20,L =14)
library(DICA)
nii = readNIfTI(paste0(fmri_path,"/rest_res2standard_2mm.nii.gz") )
#fmri
fmri_path = "/Users/ben/Desktop/work2/DICA/PNC/REST/600039015048/"
mask_path = "/Users/ben/Desktop/work2/DICA/600085654611/"
nii = readNIfTI(paste0(fmri_path,"/rest_res2standard_2mm.nii.gz") )
noise = 5*rnorm(91*109*91*120)
dim(noise) = c(91,109,91,120)
nii0 = nii + noise
for(i in 1:120){
tmp = nii0[,,,i]
tmp[mask==0] = NA
nii0[,,,i] = tmp
}
tmp =  nii0[,,,1]
sum(is.na(tmp[mask==0]))
nii0 = nii0[,,,1:50]
copyNIfTIHeader(img = nii, arr = nii0)
writeNIfTI(nii0,filename = "/Users/ben/Desktop/Rpackage/nii0")
library(neurobase)
library(DICA)
write_path = "/Users/Ben/Desktop/work2/DICA/tmp/"
fmri_path = "/Users/ben/Desktop/work2/DICA/PNC/REST/600039015048/"
mask_path = "/Users/ben/Desktop/work2/DICA/600085654611/"
nii = readNIfTI(paste0(fmri_path,"/rest_res2standard_2mm.nii.gz") )
mask = readNIfTI(paste0(mask_path,"GRAY.nii") )
noise = 5*rnorm(91*109*91*120)
dim(noise) = c(91,109,91,120)
nii0 = nii + noise
for(i in 1:120){
tmp = nii0[,,,i]
tmp[mask==0] = NA
nii0[,,,i] = tmp
}
tmp =  nii0[,,,1]
sum(is.na(tmp[mask==0]))
nii0 = nii0[,,,1:50]
copyNIfTIHeader(img = nii, arr = nii0)
writeNIfTI(nii0,filename = "/Users/ben/Desktop/Rpackage/nii0")
nii0 = nii0[,,,1:45]
copyNIfTIHeader(img = nii, arr = nii0)
writeNIfTI(nii0,filename = "/Users/ben/Desktop/Rpackage/nii0")
fmri_path = "/Users/ben/Desktop/work2/data/Kirby21/"
fmri_path = "/Users/ben/Desktop/work2/data/Kirby21/"
mask_path = "/Users/ben/Desktop/work2/data/Kirby21/gm_mask_3mm/"
nii = readNIfTI(paste0(fmri_path,"KKI01_res2standard.nii.gz") )
library(neurobase)
library(DICA)
nii = readNIfTI(paste0(fmri_path,"KKI01_res2standard.nii.gz") )
mask = readNIfTI(paste0(mask_path,"KKI2009-01_3mm_gm.nii.gz") )
dim(nii)
noise = 5*rnorm(61*73*61*206)
dim(noise) = c(61,73,61,206)
nii0 = nii + noise
dim(nii)
sd(nii[,,,1])
sd(nii[,,,100])
dim(mask)
table(mask)
for(i in 1:206){
tmp = nii0[,,,i]
tmp[mask==0] = NA
nii0[,,,i] = tmp
}
tmp =  nii0[,,,1]
sum(is.na(tmp[mask==0]))
nii0 = nii0[,,,1:70]
copyNIfTIHeader(img = nii, arr = nii0)
writeNIfTI(nii0,filename = "/Users/ben/Desktop/Rpackage/nii0")
nii1  = readNIfTI("/Users/ben/Desktop/Rpackage/nii0.nii.gz")
mask0 = 1 - is.na(nii1[,,,1])
reduced_data = prepfmri(nii1,mask0,40)
dim(reduced_data)
res_fmri = dica(reduced_data,K = 20,L =14)
write_path = "/Users/Ben/Desktop/work2/DICA/tmp/"
write_ics(res_fmri$S,nii,mask, q = 0.95, paste0(write_path,"test_fmri"))
mask_path = "/Users/ben/Desktop/work2/data/Kirby21/gm_mask_3mm_2/"
mask = readNIfTI(paste0(mask_path,"KKI2009-01_3mm_gm.nii.gz") )
nii = readNIfTI(paste0(fmri_path,"KKI01_res2standard.nii.gz") )
mask = readNIfTI(paste0(mask_path,"KKI2009-01_3mm_gm_2.nii.gz") )
nii0 = nii + noise
for(i in 1:206){
tmp = nii0[,,,i]
tmp[mask==0] = NA
nii0[,,,i] = tmp
}
tmp =  nii0[,,,1]
sum(is.na(tmp[mask==0]))
nii0 = nii0[,,,1:70]
copyNIfTIHeader(img = nii, arr = nii0)
writeNIfTI(nii0,filename = "/Users/ben/Desktop/Rpackage/nii0")
nii1  = readNIfTI("/Users/ben/Desktop/Rpackage/nii0.nii.gz")
mask0 = 1 - is.na(nii1[,,,1])
reduced_data = prepfmri(nii1,mask0,40)
res_fmri = dica(reduced_data,K = 20,L =14)
write_ics(res_fmri$S,nii,mask, q = 0.95, paste0(write_path,"test_fmri"))
nii0 = nii0[,,,20:90]
nii0 = nii + noise
for(i in 1:206){
tmp = nii0[,,,i]
tmp[mask==0] = NA
nii0[,,,i] = tmp
}
tmp =  nii0[,,,1]
sum(is.na(tmp[mask==0]))
nii0 = nii0[,,,20:90]
copyNIfTIHeader(img = nii, arr = nii0)
writeNIfTI(nii0,filename = "/Users/ben/Desktop/Rpackage/nii0")
nii1  = readNIfTI("/Users/ben/Desktop/Rpackage/nii0.nii.gz")
mask0 = 1 - is.na(nii1[,,,1])
reduced_data = prepfmri(nii1,mask0,40)
res_fmri = dica(reduced_data,K = 20,L =14)
write_ics(res_fmri$S,nii,mask, q = 0.95, paste0(write_path,"test_fmri"))
nii = readNIfTI(paste0(fmri_path,"KKI37_res2standard.nii.gz") )
mask = readNIfTI(paste0(mask_path,"KKI2009-37_3mm_gm_2.nii.gz") )
noise = 5*rnorm(61*73*61*206)
dim(noise) = c(61,73,61,206)
nii0 = nii + noise
for(i in 1:206){
tmp = nii0[,,,i]
tmp[mask==0] = NA
nii0[,,,i] = tmp
}
tmp =  nii0[,,,1]
sum(is.na(tmp[mask==0]))
nii0 = nii0[,,,20:90]
copyNIfTIHeader(img = nii, arr = nii0)
writeNIfTI(nii0,filename = "/Users/ben/Desktop/Rpackage/nii0")
nii1  = readNIfTI("/Users/ben/Desktop/Rpackage/nii0.nii.gz")
mask0 = 1 - is.na(nii1[,,,1])
reduced_data = prepfmri(nii1,mask0,40)
res_fmri = dica(reduced_data,K = 20,L =14)
write_ics(res_fmri$S,nii,mask, q = 0.95, paste0(write_path,"test_fmri"))
library(DICA)
1700-1350
350/1350
library(oro.nifti)
library(neurobase)
library(gplots)
prob = list()
b = list()
X = list()
for(i in 1:3){
X_nii_path = paste0("/Users/Ben/Desktop/work2/multiresolution/real data/","X",i)
X[[i]] = readNIfTI2(X_nii_path)
target_b = paste0('b_',i,'_m2')
b_nii_path = paste0("/Users/Ben/Desktop/work2/multiresolution/real data/res/b/",target_b,".nii.gz")
b[[i]] = readNIfTI2(b_nii_path)
target = paste0('prob_6_',i,'_m2')
prob_nii_path = paste0("/Users/Ben/Desktop/work2/multiresolution/real data/prob/",target,".nii.gz")
prob[[i]] = readNIfTI2(prob_nii_path)
}
prob_inter = list()
b_inter = list()
for(i in 1:3){
target_b = paste0('b_',i+3,'_m2')
b_nii_path = paste0("/Users/Ben/Desktop/work2/multiresolution/real data/res/b/",target_b,".nii.gz")
b_inter[[i]] = readNIfTI2(b_nii_path)
target = paste0('prob_inter_1_',i,'_m2')
prob_nii_path = paste0("/Users/Ben/Desktop/work2/multiresolution/real data/prob/",target,".nii.gz")
prob_inter[[i]] = readNIfTI2(prob_nii_path)
}
label = read.csv("/Users/ben/desktop/work2/aalregion/AAL_region_functional_networks.csv")
dim(label)
res_path = "/Users/Ben/Desktop/work2/multiresolution/real data/"
nii_path = "/Users/Ben/Desktop/work2/multiresolution/real data/AAL_90_3mm.nii"
mask = readNIfTI2(nii_path)
#make a mask
nii_path = "/Users/Ben/Desktop/work2/multiresolution/real data/AAL_90_3mm.nii"
nii = readNIfTI2(nii_path)
dim(b_inter[[3]])
dim(b[[1]])
dim(b[[2]])
dim(b[[3]])
beta_list = c(b,b_inter)
beta_list = c(b,b_inter,nii)
length(beta_list)
beta_list = c(b,b_inter)
length(beta_list)
beta_list[[7]] = nii
length(beta_list)
dim(beta_list[[7]])
table(beta_list[[7]])
beta_list = c(b[3],b[2],b[1],b_inter[3],b_inter[2],b_inter[1])
length(beta_list)
beta_list[[7]] = nii
names(beta_list) = c("2b-0b","2b-base","0b-base","2b-0b-2b-base","2b-0b-0b-base","2b-base-0b-base","AAL-region")
saveRDS(beta_list,"/Users/ben/desktop/beta_list.rds")
length(nii)
beta_matrix = matrix(0,nrow = 271633, ncol = 7)
beta_matrix = matrix(0,nrow = 271633, ncol = 7)
beta_matrix = cbind(as.numeric(b[[3]]),as.numeric(b[[2]]),as.numeric(b[[1]]),
as.numeric(b_inter[[3]]),as.numeric(b_inter[[2]]),
as.numeric(b_inter[[1]]),as.numeric(nii))
colnames(beta_matrix) = c("2b-0b","2b-base","0b-base","2b-0b-2b-base","2b-0b-0b-base","2b-base-0b-base","AAL-region")
colnames(beta_matrix)
dim(beta_matrix)
write.csv(beta_matrix,"/Users/ben/desktop/beta_matrix.csv")
beta_matrix = beta_matrix[,beta_matrix[,7]!=0]
beta_matrix = beta_matrix[beta_matrix[,7]!=0,]
dim(beta_matrix)
table(beta_matrix[,7])
write.csv(beta_matrix,"/Users/ben/desktop/beta_matrix.csv")
144*1.3
library(oro.nifti)
library(neurobase)
library(gplots)
res_path = "/Users/Ben/Desktop/work2/multiresolution/real data/"
nii_path = "/Users/Ben/Desktop/work2/multiresolution/real data/AAL_90_3mm.nii"
mask = readNIfTI2(nii_path)
num0_list = list()
pop0_list = list()
cor0_list = list()
order_cor_list = list()
for(b in 1:6){
num0 = matrix(0,nrow = 90, ncol = 5)
pop0 = matrix(0,nrow = 90, ncol = 5)
cor0 = matrix(0,nrow = 90, ncol = 5)
for( j in 0:4 ){
i = 2
#j = 4
#b = 1
if(j==0){
if(b<=3){
target = paste0('prob_6_',b,'_m',i)
}
else{
target = paste0('prob_inter_1_',b-3,'_m',i)
}
prob_nii_path = paste0("/Users/Ben/Desktop/work2/multiresolution/real data/prob/",target,".nii.gz")
}
else{
if(b<=3){
target = paste0( "inin",i,"_check",j,"_",b  )
}
else{
target = paste0( "inin",i,"_check",j,"_inter_",b-3 )
}
prob_nii_path = paste0("/Users/Ben/Desktop/work2/multiresolution/real data/sensitivity/",target,".nii.gz")
}
prob_nii_0 = readNIfTI2(prob_nii_path)
thres0 = quantile(prob_nii_0[nii>=0],0.95,na.rm=TRUE)
for(k in 1:90){
num0[k,j+1] = sum(prob_nii_0[nii==k]>=thres0)
pop0[k,j+1] = num0[k,j+1]/sum(nii==k)
cor0[k,j+1] = mean(prob_nii_0[nii==k])
}
}
num0_list[[b]] = num0
pop0_list[[b]] = pop0
cor0_list[[b]] = cor0
order_cor_list[[b]] = apply(cor0,2,order,decreasing = TRUE)
}
apply(cor0_list[[1]],2,order,decreasing = TRUE)[1:5,]
apply(pop0_list[[1]],2,order,decreasing = TRUE)[1:5,]
order(apply(pop0_list[[1]],1,median),decreasing = TRUE)[1:5]
med_out = NULL
med_out2 = NULL
for(i in c(3,2,1)){
med = apply(pop0_list[[i]],1,median)
med2 = apply(num0_list[[i]],1,median)
med_out  = cbind(med_out, med)
med_out2  = cbind(med_out2, med2)
}
med_order = apply(med_out,2,order,decreasing = TRUE)
idx = NULL
idx = sort( unique(as.numeric(med_order[1:5,]) ) )
med_out1 = med_out[idx,]
rownames(med_out1) = label$AAL.Region.Names[idx]
xtable(med_out1,digits = c(10,rep(3,3)) )
library(xtable)
med_out1 = med_out[idx,]
rownames(med_out1) = label$AAL.Region.Names[idx]
xtable(med_out1,digits = c(10,rep(3,3)) )
med_out
##full table
rownames(med_out) = label$AAL.Region.Names
length(label$AAL.Region.Names)
##full table
rownames(med_out) = label$AAL.Region.Names[1:90]
xtable(med_out,digits = c(10,rep(3,3)) )
med_out_table = cbind(label$AAL.Region.Names[1:45],med_out[1:45,],
label$AAL.Region.Names[46:90],med_out[46:90,])
xtable(med_out1,digits = c(10,rep(3,3),10,rep(3,3)) )
?xtable
xtable(med_out_table ,digits = c(10,rep(3,3),10,rep(3,3)) )
rownames(med_out_table )
rownames(med_out_table ) = NULL
xtable(med_out_table ,digits = c(10,rep(3,3),10,rep(3,3)) )
rownames(med_out_table) = label$AAL.Region.Names[1:45]
med_out_table = cbind(med_out[1:45,],
label$AAL.Region.Names[46:90],med_out[46:90,])
xtable(med_out_table ,digits = c(10,rep(3,3),10,rep(3,3)) )
c(10,rep(3,3),10,rep(3,3))
xtable(med_out_table ,digits = c(10,rep(3,3),10,rep(3,3)) )
med_out_table[1,]
med_out_table = table(med_out[1:45,],
label$AAL.Region.Names[46:90],med_out[46:90,])
med_out_table = table(med_out[1:45,],
label$AAL.Region.Names[46:90,],med_out[46:90,])
med_out_table = table(med_out[1:45,1],
label$AAL.Region.Names[46:90],med_out[46:90,1])
med_out_table[1,]
dim(med_out_table)
med_out_table = data.frame(med_out[1:45,],
label$AAL.Region.Names[46:90],med_out[46:90,])
med_out_table[1,]
rownames(med_out_table) = label$AAL.Region.Names[1:45]
xtable(med_out_table ,digits = c(10,rep(3,3),10,rep(3,3)) )
med_out = NULL
for(i in c(3,2,1,6,5,4)){
med = apply(pop0_list[[i]],1,median)
med_out  = cbind(med_out, med)
}
rownames(med_out) = label$AAL.Region.Names
rownames(med_out) = label$AAL.Region.Names[1:90]
xtable(med_out,digits = c(10,rep(3,6)) )
